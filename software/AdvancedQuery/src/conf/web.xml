<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
    
<web-app>

   <display-name>Query</display-name>
   
   <!-- This error-page has been added as a general solution for Bug:8581 -->
  <error-page>
  		<exception-type>java.lang.Exception</exception-type>
  		<location>/pages/content/home/Error.jsp</location>
  </error-page> 
  <!-- application properties file path -->
  <context-param>
    	<param-name>applicationproperties</param-name>
    	<param-value>ApplicationResources.properties</param-value>
  </context-param>
  
  <!-- base class for Application Resource bundle -->
  <context-param>
    	<param-name>resourcebundleclass</param-name>
    	<param-value>ApplicationResources</param-value>
  </context-param>
 <!-- Listener Configuration -->
  <listener>
  	<listener-class>edu.wustl.query.util.listener.QueryCoreServletContextListener</listener-class>
  </listener>
  <listener>
  	<listener-class>edu.wustl.query.util.listener.QueryCoreSessionListener</listener-class>
  </listener>

<!--Environment entry for datasource JNDI name -->
   <env-entry> 
            <env-entry-name>DataSource</env-entry-name> 
            <env-entry-value>java:/query</env-entry-value> 
            <env-entry-type>java.lang.String</env-entry-type> 
        </env-entry>
     
 <!-- Standard Action Servlet Configuration (with debugging) -->

   <servlet>
     <servlet-name>action</servlet-name>
     <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
       
     <init-param>
      <param-name>config</param-name>
      <param-value>/WEB-INF/advancequery-struts-config.xml</param-value>
    </init-param>
    <init-param>
      <param-name>debug</param-name>
      <param-value>3</param-value>
    </init-param>
    <init-param>
      <param-name>detail</param-name>
      <param-value>2</param-value>
    </init-param>     
    <load-on-startup>2</load-on-startup>
   </servlet>

   <servlet>
     <servlet-name>ResponseServlet</servlet-name>
     <servlet-class>edu.wustl.common.struts.ResponseServlet</servlet-class>
   </servlet>
	
 <!-- Standard Action Servlet Mapping -->
  <servlet-mapping>
     <servlet-name>action</servlet-name>
     <url-pattern>*.do</url-pattern>
  </servlet-mapping>

	<servlet-mapping>
     <servlet-name>ResponseServlet</servlet-name>
     <url-pattern>/ResponseServlet</url-pattern>
  </servlet-mapping>
  
	<session-config>
	 	<session-timeout>30</session-timeout> 
	</session-config>
  
 <!--Usual Welcome-file-list-->
  <welcome-file-list>
	 <welcome-file>/pages/QueryIndex.jsp</welcome-file>
  </welcome-file-list>

  <taglib>
      <taglib-uri>/WEB-INF/struts-html.tld</taglib-uri>
      <taglib-location>/WEB-INF/struts-html.tld</taglib-location>
  </taglib>

  <taglib>
	  <taglib-uri>/WEB-INF/struts-logic.tld</taglib-uri>
	  <taglib-location>/WEB-INF/struts-logic.tld</taglib-location>
  </taglib>
  
  <taglib>
	  <taglib-uri>/WEB-INF/struts-bean.tld</taglib-uri>
	  <taglib-location>/WEB-INF/struts-bean.tld</taglib-location>
  </taglib>
  
  <taglib>
	  <taglib-uri>/WEB-INF/PagenationTag.tld</taglib-uri>
	  <taglib-location>/WEB-INF/PagenationTag.tld</taglib-location>
  </taglib>
  
  <taglib>
	  <taglib-uri>/WEB-INF/AutoCompleteTag.tld</taglib-uri>
	  <taglib-location>/WEB-INF/AutoCompleteTag.tld</taglib-location>
  </taglib>

  <taglib>
	  <taglib-uri>/WEB-INF/nlevelcombo.tld</taglib-uri>
	  <taglib-location>/WEB-INF/nlevelcombo.tld</taglib-location>
  </taglib>
  
    <!--<taglib>
	  <taglib-uri>/WEB-INF/specimenDetails.tld</taglib-uri>
	  <taglib-location>/WEB-INF/specimenDetails.tld</taglib-location>
  </taglib>
   -->
  
<!--  caCore like system entries -->
  <!--    <context-param>
       	<param-name>cacoreBeans.Properties</param-name>
		<param-value>cacoreBeans.properties,evsBeans.properties</param-value>
	</context-param>
	
	<context-param>
	    <param-name>cacoreFormat.xsl</param-name>
		<param-value>xslt/cacoreFormat.xsl</param-value>
	</context-param>
	<context-param>
	    <param-name>evsFormat.xsl</param-name>
		<param-value>xslt/evsFormat.xsl</param-value>
	</context-param>
	<context-param>
		<param-name>rowCounter</param-name>
		<param-value>200</param-value>
	</context-param>
  <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	
	<servlet>
		<servlet-name>context</servlet-name>
		<servlet-class>
			org.springframework.web.context.ContextLoaderServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>httpinvoker</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>	
    
    
    <servlet>
		<servlet-name>sdkstartup</servlet-name>
		<servlet-class>
			gov.nih.nci.common.util.WebStartupUtil
		</servlet-class>
    	<load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet>
        <servlet-name>AxisServlet</servlet-name>
        <display-name>Apache-Axis Servlet</display-name>
        <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GetXML</servlet-name>
        <servlet-class>gov.nih.nci.system.proxy.HTTPQuery</servlet-class>        	
    </servlet>
    <servlet>
    	<servlet-name>GetHTML</servlet-name>
    	<servlet-class>gov.nih.nci.system.proxy.HTTPQuery</servlet-class>        	
    </servlet>
	
	<servlet>
    	<servlet-name>Happy</servlet-name>
		<jsp-file>/Happy.jsp</jsp-file>     	
    </servlet>
    
 
	<servlet-mapping>
		<servlet-name>httpinvoker</servlet-name>
		<url-pattern>/http/*</url-pattern>
	</servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>sdkstartup</servlet-name>
        <url-pattern>/server/HTTPServer</url-pattern>
    </servlet-mapping>
    
    
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/ws/AxisServlet</url-pattern>
    </servlet-mapping>
    
    
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>*.jws</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/ws/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
    	<servlet-name>GetXML</servlet-name>
    	<url-pattern>/GetXML</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
    	<servlet-name>GetHTML</servlet-name>
      	<url-pattern>/GetHTML</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>Happy</servlet-name>
      	<url-pattern>/Happy</url-pattern>
    </servlet-mapping>  
    
    -->
    
<!--  End caCore like system entries -->

<!-- Filter for accessing flex components -->	
  <!-- <filter>
        <filter-name>FlexComponentFilter</filter-name>
        <filter-class>edu.wustl.query.filter.FlexComponentFilter</filter-class>
        <description>
          
        </description>
    </filter>
    <filter-mapping>
      <filter-name>FlexComponentFilter</filter-name>
      <url-pattern>/flexclient/*</url-pattern>
    </filter-mapping>
    
   --> 
<!-- Filter configuration finish -->
 
<!-- FLEX Configuration START-->

<context-param>
        <param-name>flex.class.path</param-name>
        <param-value>/WEB-INF/flex/hotfixes,/WEB-INF/flex/jars</param-value>
    </context-param>

    <!-- Http Flex Session attribute and binding listener support -->
    <!--listener>
        <listener-class>flex.messaging.HttpFlexSession</listener-class>
    </listener-->

    <!-- MessageBroker Servlet -->
    <servlet>
        <servlet-name>MessageBrokerServlet</servlet-name>
        <display-name>MessageBrokerServlet</display-name>
        <servlet-class>flex.messaging.MessageBrokerServlet</servlet-class>
        <init-param>
            <param-name>services.configuration.file</param-name>
            <param-value>/WEB-INF/flex/services-config.xml</param-value>
       </init-param>
        <init-param>
            <param-name>flex.write.path</param-name>
            <param-value>/WEB-INF/flex</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>FlexMxmlServlet</servlet-name>
        <display-name>MXML Processor</display-name>
        <description>Servlet wrapper for the Mxml Compiler</description>
        <servlet-class>flex.bootstrap.BootstrapServlet</servlet-class>
        <init-param>
            <param-name>servlet.class</param-name>
            <param-value>flex.webtier.server.j2ee.MxmlServlet</param-value>
        </init-param>
        <init-param>
            <param-name>webtier.configuration.file</param-name>
            <param-value>/WEB-INF/flex/flex-webtier-config.xml</param-value>
        </init-param>
       <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>FlexSwfServlet</servlet-name>
        <display-name>SWF Retriever</display-name>
        <servlet-class>flex.bootstrap.BootstrapServlet</servlet-class>
        <init-param>
            <param-name>servlet.class</param-name>
            <param-value>flex.webtier.server.j2ee.SwfServlet</param-value>
        </init-param>
        <!-- SwfServlet must be initialized after MxmlServlet -->
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>FlexForbiddenServlet</servlet-name>
        <display-name>Prevents access to *.as/*.swc files</display-name>
        <servlet-class>flex.bootstrap.BootstrapServlet</servlet-class>
        <init-param>
            <param-name>servlet.class</param-name>
            <param-value>flex.webtier.server.j2ee.ForbiddenServlet</param-value>
        </init-param>
    </servlet>

    <servlet>
        <servlet-name>FlexInternalServlet</servlet-name>
        <servlet-class>flex.bootstrap.BootstrapServlet</servlet-class>
        <init-param>
            <param-name>servlet.class</param-name>
            <param-value>flex.webtier.server.j2ee.filemanager.FileManagerServlet</param-value>
        </init-param>
        <load-on-startup>10</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>MessageBrokerServlet</servlet-name>
        <url-pattern>/messagebroker/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>FlexMxmlServlet</servlet-name>
        <url-pattern>*.mxml</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>FlexSwfServlet</servlet-name>
        <url-pattern>*.swf</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>FlexForbiddenServlet</servlet-name>
        <url-pattern>*.as</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>FlexForbiddenServlet</servlet-name>
        <url-pattern>*.swc</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>FlexInternalServlet</servlet-name>
        <url-pattern>/flex-internal/*</url-pattern>
    </servlet-mapping>
    <taglib>
        <taglib-uri>FlexTagLib</taglib-uri>
        <taglib-location>/WEB-INF/lib/flex-bootstrap-jsp.jar</taglib-location>
    </taglib>

    <!-- for WebSphere deployment, please uncomment -->
    <!--
    <resource-ref>
        <description>Flex Messaging WorkManager</description>
        <res-ref-name>wm/MessagingWorkManager</res-ref-name>
        <res-type>com.ibm.websphere.asynchbeans.WorkManager</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref>
    -->

</web-app>